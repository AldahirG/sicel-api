import { PrismaClient } from '@prisma/client'
const prisma = new PrismaClient()

export async function AsetName() {
	const [
		type1,
		type2,
		type3,
		type4,
		type5,
		type6,
		type7,
		type8,
		type9,
		type10,
		type11,
		type12,
		type13,
		type14,
		type15,
		type16,
		type17,
		type18,
		type19,
		type20,
		type21,
		type22,
		type23,
	] = await Promise.all([
		prisma.contactTypes.findFirst({ where: { name: 'PAUTA' } }),
		prisma.contactTypes.findFirst({ where: { name: 'LANDING' } }),
		prisma.contactTypes.findFirst({ where: { name: 'WHATSAPP DIRECTO' } }),
		prisma.contactTypes.findFirst({ where: { name: 'MARKETING DIGITAL' } }),
		prisma.contactTypes.findFirst({ where: { name: 'CLIENGO' } }),
		prisma.contactTypes.findFirst({ where: { name: 'APOYO TRABAJADOR' } }),
		prisma.contactTypes.findFirst({ where: { name: 'BASES' } }),
		prisma.contactTypes.findFirst({ where: { name: 'VISITA UNINTER' } }),
		prisma.contactTypes.findFirst({ where: { name: 'LLAMADA ENTRANTE' } }),
		prisma.contactTypes.findFirst({ where: { name: 'VISITA ESCUELA' } }),
		prisma.contactTypes.findFirst({ where: { name: 'VISITA EMPRESA' } }),
		prisma.contactTypes.findFirst({ where: { name: 'EVENTO INTERNO' } }),
		prisma.contactTypes.findFirst({ where: { name: 'EVENTO EXTERNO' } }),
		prisma.contactTypes.findFirst({ where: { name: 'PUBLICIDAD IMPRESA' } }),
		prisma.contactTypes.findFirst({ where: { name: 'ALIANZA FRANCESA' } }),
		prisma.contactTypes.findFirst({ where: { name: 'REFERIDO' } }),
		prisma.contactTypes.findFirst({ where: { name: 'MAILING' } }),
		prisma.contactTypes.findFirst({ where: { name: 'SICAP' } }),
		prisma.contactTypes.findFirst({ where: { name: 'UNINTER INFORMA' } }),
		prisma.contactTypes.findFirst({ where: { name: 'SEGUIMIENTO INSCRITOS' } }),
		prisma.contactTypes.findFirst({ where: { name: 'CAMBACEO' } }),
		prisma.contactTypes.findFirst({ where: { name: 'UNINTERKIDS' } }),
		prisma.contactTypes.findFirst({ where: { name: 'EMAGISTER' } }),
	])

	if (
		[
			type1,
			type2,
			type3,
			type4,
			type5,
			type6,
			type7,
			type8,
			type9,
			type10,
			type11,
			type12,
			type13,
			type14,
			type15,
			type16,
			type17,
			type18,
			type19,
			type20,
			type21,
			type22,
			type23,
		].some((t) => !t)
	) {
		throw new Error(
			'❌ Uno o más contactTypes no fueron encontrados. Verifica los nombres.',
		)
	}

	const data = [
		{ name: 'TIK TOK', contactTypesId: type1.id },
		{ name: 'IG', contactTypesId: type1.id },
		{ name: 'FB', contactTypesId: type1.id },
		{ name: 'GOOGLE', contactTypesId: type1.id },
		{ name: 'WHATSAPP DIRECTO', contactTypesId: type1.id },
		{ name: 'PAGINAS UNIVERSIDAD', contactTypesId: type2.id },
		{ name: 'LEADSALES', contactTypesId: type2.id },
		{ name: 'CALCULADORA DE BECA', contactTypesId: type2.id },
		{ name: 'FORMULARIO RAPIDO', contactTypesId: type2.id },
		{ name: 'CONFERENCIAS', contactTypesId: type2.id },
		{ name: 'SESIONES INFORMATIVAS', contactTypesId: type2.id },
		{ name: 'TALLERES', contactTypesId: type2.id },
		{ name: 'ON DEMAND', contactTypesId: type2.id },
		{ name: 'TEST DE ORIENTACION VOCACIONAL', contactTypesId: type2.id },
		{ name: 'SOLICITUD DE ADMISION', contactTypesId: type2.id },
		{ name: 'UNINTER INFORMA', contactTypesId: type2.id },
		{ name: 'CONTACTO RAPIDO', contactTypesId: type2.id },
		{ name: 'WHATSAPP', contactTypesId: type2.id },
		{ name: 'UNINTERKIDS', contactTypesId: type2.id },
		{ name: 'WHATSAPP DIRECTO', contactTypesId: type3.id },
		{ name: 'ORGANICO', contactTypesId: type4.id },
		{ name: 'FB', contactTypesId: type4.id },
		{ name: 'IG', contactTypesId: type4.id },
		{ name: 'TIK TOK', contactTypesId: type4.id },
		{ name: 'CLIENGO', contactTypesId: type5.id },
		{ name: 'APOYO TRABAJADOR', contactTypesId: type6.id },
		{ name: 'BASE BAJAS', contactTypesId: type7.id },
		{ name: 'BASE DE EGRESADOS', contactTypesId: type7.id },
		{ name: 'BASE PERSONAL PROMOTOR', contactTypesId: type7.id },
		{ name: 'BASE EN FRIO', contactTypesId: type7.id },
		{ name: 'VISITA UNINTER', contactTypesId: type8.id },
		{ name: 'LLAMADA ENTRANTE', contactTypesId: type9.id },
		{ name: 'FERIA ESCUELA', contactTypesId: type10.id },
		{ name: 'SESION ESCUELA', contactTypesId: type10.id },
		{ name: 'VISITA ESCUELA', contactTypesId: type10.id },
		{ name: 'CONVENIO', contactTypesId: type11.id },
		{ name: 'EVENTO INTERNO', contactTypesId: type12.id },
		{ name: 'EVENTO EXTERNO', contactTypesId: type13.id },
		{ name: 'FOLLETERIA', contactTypesId: type14.id },
		{ name: 'ESPECTACULARES', contactTypesId: type14.id },
		{ name: 'RUTAS', contactTypesId: type14.id },
		{ name: 'VALLAS', contactTypesId: type14.id },
		{ name: 'PAUTA', contactTypesId: type15.id },
		{ name: 'MARKETING DIGITAL', contactTypesId: type15.id },
		{ name: 'LANDING', contactTypesId: type15.id },
		{ name: 'EVENTO', contactTypesId: type15.id },
		{ name: 'PERSONAL UNINTER', contactTypesId: type16.id },
		{ name: 'ALUMNO', contactTypesId: type16.id },
		{ name: 'FAMILIAR ALUMNO', contactTypesId: type16.id },
		{ name: 'DIRECTOR ESCUELA', contactTypesId: type16.id },
		{ name: 'MAILING', contactTypesId: type17.id },
		{ name: 'SICAP', contactTypesId: type18.id },
		{ name: 'UNINTER INFORMA', contactTypesId: type19.id },
		{ name: 'SEGUIMIENTO INSCRITOS', contactTypesId: type20.id },
		{ name: 'CAMBACEO', contactTypesId: type21.id },
		{ name: 'UNINTERKIDS', contactTypesId: type22.id },
		{ name: 'EMAGISTER', contactTypesId: type23.id },
	]

	await prisma.asetName.createMany({ data, skipDuplicates: true })
}
