generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  name        String?  @db.VarChar(150)
  email       String   @unique @db.VarChar(80)
  password    String   @db.VarChar(255)
  tel         String?  @db.VarChar(10)
  status      Boolean  @default(true)
  accessToken String?  @db.VarChar(255)
  created_at  DateTime @default(now())

  roles UsersOnRoles[]
  leads Lead[]
}

model Role {
  id         Int      @id @default(autoincrement())
  name       String   @unique @db.VarChar(50)
  created_at DateTime @default(now())

  users UsersOnRoles[]
}

model UsersOnRoles {
  user   User @relation(fields: [userId], references: [id])
  userId Int
  role   Role @relation(fields: [roleId], references: [id])
  roleId Int

  @@id([userId, roleId])
}

model Campaign {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(150)
  type_campaign String   @db.VarChar(10)
  status        Int      @default(1)
  created_at    DateTime @default(now())

  leads Lead[]
}

model Carreer {
  id         Int      @id @default(autoincrement())
  name       String   @unique @db.VarChar(150)
  slug       String   @unique @db.VarChar(30)
  created_at DateTime @default(now())

  leads Lead[]
}

// Grado escolar
model Grade {
  id         Int      @id @default(autoincrement())
  name       String   @unique @db.VarChar(20)
  created_at DateTime @default(now())

  leads Lead[]
}

// PSegumiento
model FollowUp {
  id         Int      @id @default(autoincrement())
  name       String   @unique @db.VarChar(100)
  created_at DateTime @default(now())

  leads Lead[]
}

// Medio de contacto
model ContactMedium {
  id   Int    @id @default(autoincrement())
  type String @db.VarChar(50)

  asetName AsetName[]
}

// Aset Name
model AsetName {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(80)

  // Id de medio de contacto
  contactMedium ContactMedium? @relation(fields: [mediumId], references: [id])
  mediumId      Int?

  lead Lead[]
}

model Lead {
  id                Int     @id @default(autoincrement())
  name              String  @db.VarChar(150)
  genre             String? @db.VarChar(50) // Sexo
  tel               String  @db.VarChar(25)
  telOptional       String? @db.VarChar(25)
  email             String  @db.VarChar(80)
  emailOptional     String? @db.VarChar(80)
  formerSchool      String? @db.VarChar(100) // Escuela de procedencia
  typeSchool        String? @db.VarChar(100) // Tipo de escuela
  country           String? @db.VarChar(60) // País
  state             String? @db.VarChar(60) // Estado
  city              String? @db.VarChar(60) // Ciudad
  schoolYear        String? @db.VarChar(6) //Ciclo escolar
  referenceType     String? @db.VarChar(50) // Tipo de referido
  referenceName     String? @db.VarChar(150) // Nombre de referido
  data_source       String? @db.VarChar(40) // Donde obtuvo el dato
  admissionSemester String? @db.VarChar(20) // Semestre de ingreso
  dateFirstContact  String? @db.VarChar(10) // Fecha de primer contacto
  status            Boolean @default(true)
  created_at        String  @db.VarChar(35) // Fecha de creacion
  updated_at        String  @db.VarChar(35) // Fecha de actualización

  // Id de pseguimiento
  followUp FollowUp? @relation(fields: [followId], references: [id])
  followId Int?

  // Id de carrera
  carreer   Carreer? @relation(fields: [carreerId], references: [id])
  carreerId Int?

  // Id de grado escolar
  grade   Grade? @relation(fields: [gradeId], references: [id])
  gradeId Int?

  // Id de campaña
  campaign   Campaign @relation(fields: [campaignId], references: [id])
  campaignId Int

  // Id de promotor
  user   User? @relation(fields: [userId], references: [id])
  userId Int?

  // Id del aset name
  asetName   AsetName? @relation(fields: [asetNameId], references: [id])
  asetNameId Int?
}

model Assignment {
  id         Int      @id @default(autoincrement())
  userId     Int      @db.Int
  leadId     Int      @db.Int
  created_at DateTime @default(now())
}
