generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  name        String?  @db.VarChar(150)
  email       String   @unique @db.VarChar(80)
  password    String   @db.VarChar(255)
  tel         String?  @db.VarChar(10)
  status      Boolean  @default(true)
  accessToken String?  @db.VarChar(255)
  created_at  DateTime @default(now())

  roles UsersOnRoles[]
  leads Lead[]
}

model Role {
  id         Int      @id @default(autoincrement())
  name       String   @unique @db.VarChar(50)
  created_at DateTime @default(now())

  users UsersOnRoles[]
}

model UsersOnRoles {
  user   User @relation(fields: [userId], references: [id])
  userId Int
  role   Role @relation(fields: [roleId], references: [id])
  roleId Int

  @@id([userId, roleId])
}

model Campaign {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(150)
  type_campaign String   @db.VarChar(10)
  status        Int      @default(1)
  created_at    DateTime @default(now())

  leads Lead[]
}

model Carreer {
  id         Int      @id @default(autoincrement())
  name       String   @unique @db.VarChar(150)
  slug       String   @unique @db.VarChar(30)
  created_at DateTime @default(now())

  leads Lead[]
}

// Grado escolar
model Grade {
  id         Int      @id @default(autoincrement())
  name       String   @unique @db.VarChar(20)
  created_at DateTime @default(now())

  leads Lead[]
}

// PSegumiento
model FollowUp {
  id         Int      @id @default(autoincrement())
  name       String   @unique @db.VarChar(100)
  created_at DateTime @default(now())

  leads Lead[]
}

model Lead {
  id                Int     @id @default(autoincrement())
  name              String  @db.VarChar(150)
  tel               String  @db.VarChar(10)
  telOptional       String? @db.VarChar(10)
  email             String  @unique @db.VarChar(80)
  emailOptional     String? @unique @db.VarChar(80)
  genre             String  @db.VarChar(50)
  dateFirstContact  String? @db.VarChar(10) // Fecha de primer contacto
  dateBirth         String  @db.VarChar(10) // Fecha de nacimiento
  formerSchool      String  @db.VarChar(100) // Escuela de procedencia
  country           String  @db.VarChar(60)
  state             String  @db.VarChar(60)
  city              String  @db.VarChar(60)
  asetNameForm      String  @db.VarChar(150)
  isOrganic         String  @db.VarChar(10)
  referenceType     String  @db.VarChar(50) // Tipo de referido
  referenceName     String  @db.VarChar(150) // Nombre de referido
  enrollmentDate    String  @db.VarChar(10) // Fecha de inscripcion
  scholarship       String  @db.VarChar(60) // Beca
  enrollmentStatus  String  @db.VarChar(10) // Estatus de inscripcion
  admissionSemester String  @db.VarChar(20) // Semestre de ingreso

  // Id de campa√±a
  campaign   Campaign @relation(fields: [campaignId], references: [id])
  campaignId Int

  // Id de pseguimiento
  followUp FollowUp @relation(fields: [followId], references: [id])
  followId Int

  // Id de grado escolar
  grade   Grade @relation(fields: [gradeId], references: [id])
  gradeId Int

  // Id de carrera
  carreer   Carreer? @relation(fields: [carreerId], references: [id])
  carreerId Int

  // Id de promotor
  user   User @relation(fields: [userId], references: [id])
  userId Int
}
